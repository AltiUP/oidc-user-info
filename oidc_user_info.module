<?php

use Drupal\Core\Session\AccountInterface;
use Drupal\oidc\OpenidConnectSession;
use Drupal\user\Entity\User;

/**
 * Implements hook_user_login().
 */
function oidc_user_info_user_login(AccountInterface $account) {
  // Vérifie si l'utilisateur est authentifié via OpenID Connect.
  if (!$account->isAuthenticated()) {
    return;
  }

  // Récupère le service de session OIDC.
  $oidc_session = \Drupal::service('oidc.openid_connect_session');

  // Récupère les tokens JWT associés à l'utilisateur via la session OIDC.
  $tokens = $oidc_session->getJsonWebTokens();

  if ($tokens) {
    // Log le token complet en format JSON.
    \Drupal::logger('oidc_user_info')->info('Token reçu : <pre>@token</pre>', [
      '@token' => print_r($tokens, TRUE),
    ]);

    // Décoder le JWT pour accéder aux claims.
    $claims = $tokens->getClaims();

    // Vérifier et récupérer les claims nécessaires.
    $fields_map = [
      'sub' => 'field_numero_de_membre',
      'first_name' => 'field_prenom',
      'last_name' => 'field_nom',
      'membership_years' => 'field_membership_years',
      'email' => 'field_email',
      'phone_number_landline' => 'field_phone_fixe',
      'phone_number_mobile' => 'field_phone_mobile',
    ];

    foreach ($fields_map as $claim => $field_name) {
      if (isset($claims[$claim])) {
        $account->set($field_name, $claims[$claim]);
      }
    }

    // Sauvegarde l'utilisateur avec les nouvelles valeurs dans les champs.
    $account->save();
  }
}